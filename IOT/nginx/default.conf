server {
    listen 80;

    # Proxy HTTP and WebSocket requests
    location / {
        proxy_pass http://iot:8000;
        proxy_http_version 1.1;  # Use HTTP/1.1 for WebSocket
        proxy_set_header Upgrade $http_upgrade;  # Handle WebSocket upgrades
        proxy_set_header Connection "upgrade";  # Maintain WebSocket connection
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket-specific location (if separated from HTTP)
    location /ws/ {
        proxy_pass http://iot:8000;  # Pass WebSocket requests to the backend
        proxy_http_version 1.1;  # WebSocket requires HTTP/1.1
        proxy_set_header Upgrade $http_upgrade;  # Forward upgrade header
        proxy_set_header Connection "upgrade";  # Forward connection upgrade
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve static files
    location /static/ {
        alias /usr/src/app/staticfiles/;  # Path to your static files in the container
    }

    # Optional: Serve media files
    location /media/ {
        alias /usr/src/app/mediafiles/;  # Path to your media files in the container
    }

    # Error handling
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
    }
}
